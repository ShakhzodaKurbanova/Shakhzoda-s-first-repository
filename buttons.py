from telebot import types
import database as db


# –∫–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–æ–º–µ—Ä–∞

def num_button():
    # —Å–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ
    kb = types.ReplyKeyboardMarkup(resize_keyboard=True)
    # —Å–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏
    but1 = types.KeyboardButton('Send my numberüìû', request_contact=True)
    # –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ
    kb.add(but1)
    return kb

# –∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ —Ç–æ–≤–∞—Ä–∞


def main_menu(products):
    # —Å–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ
    kb = types.InlineKeyboardMarkup(row_width=2)
    # —Å–æ–∑–¥–∞–µ–º —Å–∞–º–∏ –∫–Ω–æ–ø–∫–∏
    # but1 = types.InlineKeyboardButton(text='–¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏',
    #                                  callback_data='–ö–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ')
    cart = types.InlineKeyboardButton(text='–ö–æ—Ä–∑–∏–Ω–∞',
                                      callback_data='cart')
    # all_products = [types.InlineKeyboardButton(text=f'{i[1]}',
    #                                           callback_data=f'{i[0]}')
    #                    for i in products if i[2] > 0]
    # –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ
#    kb.add(*all_products)
#    kb.row(cart)
#    return kb

# –∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞


def choose_pr_count(pr_amount, plus_or_minus='', amount=1):
    # —Å–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ
    kb = types.InlineKeyboardMarkup(row_width=3)
    # —Å–æ–∑–¥–∞–µ–º —Å–∞–º–∏ –∫–Ω–æ–ø–∫–∏
    minus = types.InlineKeyboardButton(text='-',
                                       callback_data='decrement')
    count = types.InlineKeyboardButton(text=str(amount), callback_data=str(amount))
    plus = types.InlineKeyboardButton(text='+', callback_data='to cart')
    to_cart = types.InlineKeyboardButton(text='–í –∫–æ—Ä–∑–∏–Ω—É', callback_data='to_cart')
    back = types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='back')
    # –∞–ª–≥–æ—Ä–∏—Ç–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–∞
    if plus_or_minus == 'increment':
        if amount < pr_amount:
            count = types.InlineKeyboardButton(text=str(amount + 1), callback_data='amount')
    elif plus_or_minus == 'decrement':
        if amount > 1:
            count = types.InlineKeyboardButton(text=str(amount - 1), callback_data=amount)
    # –¥–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫–∏ –≤ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ
    kb.add(minus, count, plus)
    kb.row(to_cart, back)
    return kb

# –∫–Ω–æ–ø–∫–∏ –∫–æ—Ä–∑–∏–Ω—ã


def cart_buttons():
    # —Å–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ
    kb = types.InlineKeyboardMarkup(row_width=2)
    # —Å–æ–∑–¥–∞–µ–º —Å–∞–º–∏ –∫–Ω–æ–ø–∫–∏
    order = types.InlineKeyboardButton(text='–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑',
                                       callback_data='order')
    clear = types.InlineKeyboardButton(text='–û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É',
                                       callback_data='clear')
    back = types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥',
                                      callback_data='back')
    # –¥–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫–∏ –≤ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ
    kb.add(order, clear)
    kb.row(back)
    return kb

# –ö–Ω–æ–ø–∫–∏ –¥–ª—è –∞–¥–º–∏–Ω–∫–∏
# –ú–µ–Ω—é –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏


def admin_menu():
    # —Å–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ
    kb = types.ReplyKeyboardMarkup(resize_keyboard=True)
    # –°–æ–∑–¥–∞–µ–º —Å–∞–º–∏ –∫–Ω–æ–ø–∫–∏
    but1 = types.KeyboardButton('–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä')
    but2 = types.KeyboardButton('–£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä')
    but3 = types.KeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å —Ç–æ–≤–∞—Ä')
    but4 = types.KeyboardButton('–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ
    kb.add(but1, but2, but3)
    kb.row(but4)
    return kb

# –ö–Ω–æ–ø–∫–∏ –≤—ã–≤–æ–¥–∞ —Ç–æ–≤–∞—Ä–æ–≤


def admin_pr(products):
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ
    kb = types.ReplyKeyboardMarkup(resize_keyboard=True)
    # –°–æ–∑–¥–∞–µ–º —Å–∞–º–∏ –∫–Ω–æ–ø–∫–∏
    all_products = [types.KeyboardButton(f'{i[1]}') for i in products]
    back = types.KeyboardButton('–ù–∞–∑–∞–¥')
    # –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ
    kb.add(all_products)
    kb.row(back)
    return kb

# –ö–Ω–æ–ø–∫–∏ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∞—Ç—Ä–∏–±—É—Ç–∞


def change_buttons():
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ
    kb = types.InlineKeyboardMarkup(row_width=2)
    # –°–æ–∑–¥–∞–µ–º —Å–∞–º–∏ –∫–Ω–æ–ø–∫–∏
    name = types.InlineKeyboardButton(text='–ù–∞–∑–≤–∞–Ω–∏–µ',
                                      callback_data='name')
    des = types.InlineKeyboardButton(text='–û–ø–∏—Å–∞–Ω–∏–µ',
                                     callback_data='des')
    count = types.InlineKeyboardButton(text='–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ',
                                       callback_data='count')
    price = types.InlineKeyboardButton(text='–¶–µ–Ω–∞',
                                       callback_data='price')
    photo = types.InlineKeyboardButton(text='–§–æ—Ç–æ',
                                       callback_data='photo')
    back = types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥',
                                      callback_data='back')
    # –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ
    kb.row(name)
    kb.add(des, count, price, photo)
    kb.row(back)
    return kb

# –∫–Ω–æ–ø–∫–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è


def confirm_buttons():
    # —Å–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ
    kb = types.ReplyKeyboardMarkup(resize_keyboard=True)
    # —Å–æ–∑–¥–∞–µ–º —Å–∞–º–∏ –∫–Ω–æ–ø–∫–∏
    yes = types.KeyboardButton('–î–∞')
    no = types.KeyboardButton('–ù–µ—Ç')
    # –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ
    kb.add(yes, no)
    return kb






